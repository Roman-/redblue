// Halmak for ROG redblue

default partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {
    name[Group1] = "rog halmak";

    // rog: bottom row of modifiers
    // left alt = BLUE (navigation), right alt = RED (symbols)
    include "level3(lalt_switch)"
    include "level5(ralt_switch)"

    key.type[Group1] = "ONE_LEVEL";
    key <ESC>  { [ Caps_Lock ] };
    key <PRSC> { [ Super_R ] };
    key <BKSP> { [ BackSpace ] };
    key <LWIN> { [ Alt_L ] };
    key <SUPR> { [ Alt_L ] };

    key.type[Group1] = "EIGHT_LEVEL";
    key <SPCE> { [ space, space, F18, F20, space, space, space, space] };
    key <TAB> { [ Tab, Tab, Tab, Tab, U2022, U25E6, Tab, Tab ] };

    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";
    // Mods: [ None,   Shift,      BLUE,     Shift+BLUE,
    //         RED,    Shift+RED,  RED+BLUE, Shift+RED+BLUE ]

    // row #0 (numbers)

    // `
    key <TLDE> {
        type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
        symbols[Group1] = [
          grave, asciitilde, grave, asciitilde,
          grave, asciitilde, grave, asciitilde ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 1 -> 1
    key <AE01> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            1, exclam, 1, 1,
            1, U00B9, 1, 1
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 2 -> 2
    key <AE02> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            2, at, 2, 2,
            2, U00B2, 2, 2
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 3 -> 3
    key <AE03> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            3, numbersign, 3, 3,
            3, U00B3, 3, 3
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 4 -> 4
    key <AE04> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            4, dollar, 4, 4,
            4, U2074, 4, 4
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 5 -> 5
    key <AE05> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            5, percent, 5, 5,
            5, U2075, 5, 5
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 6 -> 6
    key <AE06> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            6, asciicircum, 6, 6,
            6, U2076, 6, 6
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 7 -> 7
    key <AE07> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            7, ampersand, 7, 7,
            7, U2077, 7, 7
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 8 -> 8
    key <AE08> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            8, asterisk, 8, 8,
            8, U2078, 8, 8
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 9 -> 9
    key <AE09> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            9, parenleft, 9, 9,
            9, U2079, 9, 9
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // 0 -> 0
    key <AE10> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            0, parenright, 0, 0,
            0, U2070, 0, 0
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // minus -> minus
    key <AE11> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            minus, underscore, minus, minus,
            minus, minus, minus, minus
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // equal -> equal
    key <AE12> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            equal, plus, equal, equal,
            equal, equal, equal, equal
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // row #1

    // q -> w
    key <AD01> {
        type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
        symbols[Group1] = [
            w, W, w, w,
            ampersand, U1F609, w, w
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // find (ctrl+f)
          RedirectKey(key=<AB01>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AB01>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // w -> l
    key <AD02> {
        type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
        symbols[Group1] = [
            l,  L, l, l,
            at, U1F525, l, l
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // tab left (ctrl+PGUP)
          RedirectKey(key=<PGUP>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<PGUP>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          // tab first (ctrl+1)
          RedirectKey(key=<AE01>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AE01>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // e -> r
    key <AD03> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            r,          R, r, r,
            numbersign, U221A, r, r
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // tab close (ctrl+w), undo tab close (ctrl+shift+t)
          RedirectKey(key=<AD01>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AC04>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // r -> b
    key <AD04> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            b,           B, b, b,
            bracketleft, b, b, b
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // tab right (ctrl+PGDN)
          RedirectKey(key=<PGDN>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<PGDN>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          // tab last (ctrl+9)
          RedirectKey(key=<AE09>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AE09>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // t -> z
    key <AD05> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            z,          Z, z, z,
            asciicircum, U1F929, z, z
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // undo
          RedirectKey(key=<AD05>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AD05>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // y -> nothing (used to be semicolon in original halmak)
    key <AD06> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            U263A, U1F642, asciicircum, asciicircum,
            1, U1F642, U1F60B, U1F60A
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // u -> q
    key <AD07> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            q,            Q, q, q,
            bracketright, U1F937, q, q
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // home
          RedirectKey(key=<HOME>, clearmods=Mod3+Mod5),
          RedirectKey(key=<HOME>, clearmods=Mod3+Mod5, mods=Shift),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // i -> u
    key <AD08> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            u, U, u, u,
            question, U1F44D, u, u
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // page up
          RedirectKey(key=<PGUP>, clearmods=Mod3+Mod5),
          RedirectKey(key=<PGUP>, clearmods=Mod3+Mod5, mods=Shift),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // o -> d
    key <AD09> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            d, D, d, d,
            asterisk, U1F606, d, d
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // end
          RedirectKey(key=<END>,  clearmods=Mod3+Mod5),
          RedirectKey(key=<END>,  clearmods=Mod3+Mod5, mods=Shift),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // p -> j
    key <AD10> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            j, J, j, j,
            0, j, j, j
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // refresh / previous cmd = ctrl+R
          RedirectKey(key=<AD03>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AD03>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // bracketleft -> apostrophe
    key <AD11> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            apostrophe, U00A4, apostrophe, apostrophe,
            apostrophe, U2713, apostrophe, apostrophe
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // c-d (send EOF)
          RedirectKey(key=<AD09>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AD09>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // bracketright -> backslash
    key <AD12> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            backslash, U2717, backslash, backslash,
            backslash, U2717, backslash, backslash
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // c-n (new)
          RedirectKey(key=<AC03>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AC03>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // row #2

    // CAPS -> escape / delete
    key <CAPS> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            Escape, Escape, Escape, Escape,
            Escape, Escape, Escape, Escape
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // delete
          RedirectKey(key=<DELE>, clearmods=Mod3+Mod5),
          RedirectKey(key=<DELE>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<DELE>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<DELE>, clearmods=Mod3+Mod5)
        ]
    };

    // a -> s
    key <AC01> {
        type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC",
        symbols[Group1] = [
            s, S, s, s,
            exclam, U2260, s, s
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // backspace
          RedirectKey(key=<BKSP>, clearmods=Mod3+Mod5),
          RedirectKey(key=<BKSP>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<BKSP>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<BKSP>, clearmods=Mod3+Mod5)
        ]
    };

    // s -> h
    key <AC02> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            h, H, h, h,
            plus, U00B1, h, h
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // save (ctrl+s)
          NoAction(), RedirectKey(key=<AC01>, clearmods=Shift+Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          // zoom in (ctrl+=)
          RedirectKey(key=<AE12>, clearmods=Shift+Mod3+Mod5, mods=Control),
          NoAction()
        ]
    };

    // d -> n
    key <AC03> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            n, N, n, n,
            equal, U2248, n, n
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // f -> t
    key <AC04> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            t, T, t, t,
            parenleft, U1F914, t, t
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // blue+t = enter
          RedirectKey(key=<RTRN>, clearmods=Mod3+Mod5),
          RedirectKey(key=<RTRN>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<RTRN>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<RTRN>, clearmods=Mod3+Mod5, mods=Control)
        ]
    };

    // g -> comma
    key <AC05> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            comma, U00B0, comma, comma,
            braceleft, U00B0, comma, comma
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // h -> period
    key <AC06> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            period, U2026, period, period,
            braceright, U2026, period, period
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // j -> a
    key <AC07> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            a, A, a, a,
            parenright, U2190, a, a
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<LEFT>, clearmods=Mod3+Mod5),
          RedirectKey(key=<LEFT>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<LEFT>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<LEFT>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // k -> e
    key <AC08> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            e, E, e, e,
            underscore, U2193, e, e
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<DOWN>, clearmods=Mod3+Mod5),
          RedirectKey(key=<DOWN>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<DOWN>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<DOWN>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // l -> o
    key <AC09> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            o, O, o, o,
            colon, U2191, o, o
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<UP>, clearmods=Mod3+Mod5),
          RedirectKey(key=<UP>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<UP>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<UP>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // semicolon -> i
    key <AC10> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            i, I, i, i,
            semicolon, U2192, i, i
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<RGHT>, clearmods=Mod3+Mod5),
          RedirectKey(key=<RGHT>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          RedirectKey(key=<RGHT>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<RGHT>, clearmods=Mod3+Mod5, mods=Shift+Control)
        ]
    };

    // apostrophe -> minus
    key <AC11> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            minus, endash, minus, minus,
            minus, emdash, minus, minus
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // c-o (open)
          RedirectKey(key=<AC09>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AC09>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          // zoom out (ctrl+-)
          RedirectKey(key=<AE11>, clearmods=Shift+Mod3+Mod5, mods=Control),
          NoAction()
        ]
    };

    // backslash -> nothing (actions in i3)
    key <AC12> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            Cyrillic_ef, Cyrillic_EF, Cyrillic_ef, Cyrillic_ef,
            Cyrillic_ef, Cyrillic_ef, Cyrillic_ef, Cyrillic_ef
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // row 3

    // z -> f
    key <AB01> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            f, F, f, f,
            asciitilde, U1F926, f, f
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // select all (ctrl+a)
          RedirectKey(key=<AC07>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AC07>, clearmods=Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // x -> m
    key <AB02> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            m, M, m, m,
            percent, U00B5, m, m
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // cut (ctrl+x)
          RedirectKey(key=<AB08>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AB08>, clearmods=Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // c -> v
    key <AB03> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            v, V, v, v,
            grave, v, v, v
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // paste (ctrl+v)
          RedirectKey(key=<AB03>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AB03>, clearmods=Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // v -> c
    key <AB04> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            c, C, c, c,
            less, U00A9, c, c
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // copy (ctrl+c)
          RedirectKey(key=<AB04>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AB04>, clearmods=Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // b -> slash
    key <AB05> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            slash, U00F7, slash, slash,
            slash, U00F7, slash, slash
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // new tab (ctrl t)
          RedirectKey(key=<AC04>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AC04>, clearmods=Mod3+Mod5, mods=Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // n -> g
    key <AB06> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            g, G, g, g,
            quotedbl, U1F631, g, g
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // addr (ctrl+L)
          RedirectKey(key=<AD02>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AD02>, clearmods=Mod3+Mod5, mods=Control+Shift),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // m -> p
    key <AB07> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            p, P, p, p,
            greater, U1F389, p, p
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          RedirectKey(key=<PGDN>, clearmods=Mod3+Mod5),
          RedirectKey(key=<PGDN>, clearmods=Mod3+Mod5),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // comma -> x
    key <AB08> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            x, X, x, x,
            bar, U1F641, x, x
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // period -> k
    key <AB09> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            k, K, k, k,
            numerosign, k, k, k
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          // c-k (insert link)
          RedirectKey(key=<AB09>, clearmods=Mod3+Mod5, mods=Control),
          RedirectKey(key=<AB09>, clearmods=Mod3+Mod5, mods=Shift+Control),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };

    // slash -> y
    key <AB10> {
        type[Group1] = "EIGHT_LEVEL",
        symbols[Group1] = [
            y, Y, y, y,
            dollar, y, y, y
        ],
        actions[Group1] = [
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction(),
          NoAction(), NoAction()
        ]
    };
};
